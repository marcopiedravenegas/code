
../bin/cpp_optimization:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	48 83 ec 08          	sub    rsp,0x8
    1004:	48 8b 05 dd 2f 00 00 	mov    rax,QWORD PTR [rip+0x2fdd]        # 3fe8 <__gmon_start__>
    100b:	48 85 c0             	test   rax,rax
    100e:	74 02                	je     1012 <_init+0x12>
    1010:	ff d0                	call   rax
    1012:	48 83 c4 08          	add    rsp,0x8
    1016:	c3                   	ret    

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 e2 2f 00 00    	push   QWORD PTR [rip+0x2fe2]        # 4008 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 e4 2f 00 00    	jmp    QWORD PTR [rip+0x2fe4]        # 4010 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000001030 <std::ostream::put(char)@plt>:
    1030:	ff 25 e2 2f 00 00    	jmp    QWORD PTR [rip+0x2fe2]        # 4018 <std::ostream::put(char)@GLIBCXX_3.4>
    1036:	68 00 00 00 00       	push   0x0
    103b:	e9 e0 ff ff ff       	jmp    1020 <.plt>

0000000000001040 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>:
    1040:	ff 25 da 2f 00 00    	jmp    QWORD PTR [rip+0x2fda]        # 4020 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@GLIBCXX_3.4>
    1046:	68 01 00 00 00       	push   0x1
    104b:	e9 d0 ff ff ff       	jmp    1020 <.plt>

0000000000001050 <std::ostream::flush()@plt>:
    1050:	ff 25 d2 2f 00 00    	jmp    QWORD PTR [rip+0x2fd2]        # 4028 <std::ostream::flush()@GLIBCXX_3.4>
    1056:	68 02 00 00 00       	push   0x2
    105b:	e9 c0 ff ff ff       	jmp    1020 <.plt>

0000000000001060 <__cxa_atexit@plt>:
    1060:	ff 25 ca 2f 00 00    	jmp    QWORD PTR [rip+0x2fca]        # 4030 <__cxa_atexit@GLIBC_2.2.5>
    1066:	68 03 00 00 00       	push   0x3
    106b:	e9 b0 ff ff ff       	jmp    1020 <.plt>

0000000000001070 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)@plt>:
    1070:	ff 25 c2 2f 00 00    	jmp    QWORD PTR [rip+0x2fc2]        # 4038 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)@GLIBCXX_3.4>
    1076:	68 04 00 00 00       	push   0x4
    107b:	e9 a0 ff ff ff       	jmp    1020 <.plt>

0000000000001080 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>:
    1080:	ff 25 ba 2f 00 00    	jmp    QWORD PTR [rip+0x2fba]        # 4040 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@GLIBCXX_3.4.9>
    1086:	68 05 00 00 00       	push   0x5
    108b:	e9 90 ff ff ff       	jmp    1020 <.plt>

0000000000001090 <std::ctype<char>::_M_widen_init() const@plt>:
    1090:	ff 25 b2 2f 00 00    	jmp    QWORD PTR [rip+0x2fb2]        # 4048 <std::ctype<char>::_M_widen_init() const@GLIBCXX_3.4.11>
    1096:	68 06 00 00 00       	push   0x6
    109b:	e9 80 ff ff ff       	jmp    1020 <.plt>

00000000000010a0 <std::__throw_bad_cast()@plt>:
    10a0:	ff 25 aa 2f 00 00    	jmp    QWORD PTR [rip+0x2faa]        # 4050 <std::__throw_bad_cast()@GLIBCXX_3.4>
    10a6:	68 07 00 00 00       	push   0x7
    10ab:	e9 70 ff ff ff       	jmp    1020 <.plt>

00000000000010b0 <std::ios_base::Init::Init()@plt>:
    10b0:	ff 25 a2 2f 00 00    	jmp    QWORD PTR [rip+0x2fa2]        # 4058 <std::ios_base::Init::Init()@GLIBCXX_3.4>
    10b6:	68 08 00 00 00       	push   0x8
    10bb:	e9 60 ff ff ff       	jmp    1020 <.plt>

00000000000010c0 <std::ostream& std::ostream::_M_insert<double>(double)@plt>:
    10c0:	ff 25 9a 2f 00 00    	jmp    QWORD PTR [rip+0x2f9a]        # 4060 <std::ostream& std::ostream::_M_insert<double>(double)@GLIBCXX_3.4.9>
    10c6:	68 09 00 00 00       	push   0x9
    10cb:	e9 50 ff ff ff       	jmp    1020 <.plt>

00000000000010d0 <std::ostream::operator<<(int)@plt>:
    10d0:	ff 25 92 2f 00 00    	jmp    QWORD PTR [rip+0x2f92]        # 4068 <std::ostream::operator<<(int)@GLIBCXX_3.4>
    10d6:	68 0a 00 00 00       	push   0xa
    10db:	e9 40 ff ff ff       	jmp    1020 <.plt>

Disassembly of section .plt.got:

00000000000010e0 <__cxa_finalize@plt>:
    10e0:	ff 25 e2 2e 00 00    	jmp    QWORD PTR [rip+0x2ee2]        # 3fc8 <__cxa_finalize@GLIBC_2.2.5>
    10e6:	66 90                	xchg   ax,ax

Disassembly of section .text:

00000000000010f0 <_start>:
    10f0:	31 ed                	xor    ebp,ebp
    10f2:	49 89 d1             	mov    r9,rdx
    10f5:	5e                   	pop    rsi
    10f6:	48 89 e2             	mov    rdx,rsp
    10f9:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
    10fd:	50                   	push   rax
    10fe:	54                   	push   rsp
    10ff:	4c 8d 05 fa 08 00 00 	lea    r8,[rip+0x8fa]        # 1a00 <__libc_csu_fini>
    1106:	48 8d 0d 93 08 00 00 	lea    rcx,[rip+0x893]        # 19a0 <__libc_csu_init>
    110d:	48 8d 3d c1 00 00 00 	lea    rdi,[rip+0xc1]        # 11d5 <main>
    1114:	ff 15 c6 2e 00 00    	call   QWORD PTR [rip+0x2ec6]        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    111a:	f4                   	hlt    
    111b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001120 <deregister_tm_clones>:
    1120:	48 8d 3d 59 2f 00 00 	lea    rdi,[rip+0x2f59]        # 4080 <__TMC_END__>
    1127:	48 8d 05 52 2f 00 00 	lea    rax,[rip+0x2f52]        # 4080 <__TMC_END__>
    112e:	48 39 f8             	cmp    rax,rdi
    1131:	74 15                	je     1148 <deregister_tm_clones+0x28>
    1133:	48 8b 05 9e 2e 00 00 	mov    rax,QWORD PTR [rip+0x2e9e]        # 3fd8 <_ITM_deregisterTMCloneTable>
    113a:	48 85 c0             	test   rax,rax
    113d:	74 09                	je     1148 <deregister_tm_clones+0x28>
    113f:	ff e0                	jmp    rax
    1141:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    1148:	c3                   	ret    
    1149:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000001150 <register_tm_clones>:
    1150:	48 8d 3d 29 2f 00 00 	lea    rdi,[rip+0x2f29]        # 4080 <__TMC_END__>
    1157:	48 8d 35 22 2f 00 00 	lea    rsi,[rip+0x2f22]        # 4080 <__TMC_END__>
    115e:	48 29 fe             	sub    rsi,rdi
    1161:	48 89 f0             	mov    rax,rsi
    1164:	48 c1 ee 3f          	shr    rsi,0x3f
    1168:	48 c1 f8 03          	sar    rax,0x3
    116c:	48 01 c6             	add    rsi,rax
    116f:	48 d1 fe             	sar    rsi,1
    1172:	74 14                	je     1188 <register_tm_clones+0x38>
    1174:	48 8b 05 75 2e 00 00 	mov    rax,QWORD PTR [rip+0x2e75]        # 3ff0 <_ITM_registerTMCloneTable>
    117b:	48 85 c0             	test   rax,rax
    117e:	74 08                	je     1188 <register_tm_clones+0x38>
    1180:	ff e0                	jmp    rax
    1182:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    1188:	c3                   	ret    
    1189:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000001190 <__do_global_dtors_aux>:
    1190:	80 3d e9 2e 00 00 00 	cmp    BYTE PTR [rip+0x2ee9],0x0        # 4080 <__TMC_END__>
    1197:	75 2f                	jne    11c8 <__do_global_dtors_aux+0x38>
    1199:	55                   	push   rbp
    119a:	48 83 3d 26 2e 00 00 	cmp    QWORD PTR [rip+0x2e26],0x0        # 3fc8 <__cxa_finalize@GLIBC_2.2.5>
    11a1:	00 
    11a2:	48 89 e5             	mov    rbp,rsp
    11a5:	74 0c                	je     11b3 <__do_global_dtors_aux+0x23>
    11a7:	48 8b 3d ca 2e 00 00 	mov    rdi,QWORD PTR [rip+0x2eca]        # 4078 <__dso_handle>
    11ae:	e8 2d ff ff ff       	call   10e0 <__cxa_finalize@plt>
    11b3:	e8 68 ff ff ff       	call   1120 <deregister_tm_clones>
    11b8:	c6 05 c1 2e 00 00 01 	mov    BYTE PTR [rip+0x2ec1],0x1        # 4080 <__TMC_END__>
    11bf:	5d                   	pop    rbp
    11c0:	c3                   	ret    
    11c1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    11c8:	c3                   	ret    
    11c9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000011d0 <frame_dummy>:
    11d0:	e9 7b ff ff ff       	jmp    1150 <register_tm_clones>

00000000000011d5 <main>:
    11d5:	41 55                	push   r13
    11d7:	41 54                	push   r12
    11d9:	55                   	push   rbp
    11da:	53                   	push   rbx
    11db:	48 81 ec 88 01 00 00 	sub    rsp,0x188
    11e2:	c7 84 24 50 01 00 00 	mov    DWORD PTR [rsp+0x150],0x1
    11e9:	01 00 00 00 
    11ed:	c7 84 24 54 01 00 00 	mov    DWORD PTR [rsp+0x154],0x2
    11f4:	02 00 00 00 
    11f8:	c7 84 24 58 01 00 00 	mov    DWORD PTR [rsp+0x158],0x3
    11ff:	03 00 00 00 
    1203:	c7 84 24 5c 01 00 00 	mov    DWORD PTR [rsp+0x15c],0x4
    120a:	04 00 00 00 
    120e:	c7 84 24 60 01 00 00 	mov    DWORD PTR [rsp+0x160],0x5
    1215:	05 00 00 00 
    1219:	c7 84 24 64 01 00 00 	mov    DWORD PTR [rsp+0x164],0x6
    1220:	06 00 00 00 
    1224:	c7 84 24 68 01 00 00 	mov    DWORD PTR [rsp+0x168],0x7
    122b:	07 00 00 00 
    122f:	c7 84 24 6c 01 00 00 	mov    DWORD PTR [rsp+0x16c],0x8
    1236:	08 00 00 00 
    123a:	c7 84 24 70 01 00 00 	mov    DWORD PTR [rsp+0x170],0x9
    1241:	09 00 00 00 
    1245:	c7 84 24 74 01 00 00 	mov    DWORD PTR [rsp+0x174],0xa
    124c:	0a 00 00 00 
    1250:	48 8b 05 49 0e 00 00 	mov    rax,QWORD PTR [rip+0xe49]        # 20a0 <_IO_stdin_used+0xa0>
    1257:	48 89 84 24 00 01 00 	mov    QWORD PTR [rsp+0x100],rax
    125e:	00 
    125f:	48 8b 05 42 0e 00 00 	mov    rax,QWORD PTR [rip+0xe42]        # 20a8 <_IO_stdin_used+0xa8>
    1266:	48 89 84 24 08 01 00 	mov    QWORD PTR [rsp+0x108],rax
    126d:	00 
    126e:	48 8b 05 3b 0e 00 00 	mov    rax,QWORD PTR [rip+0xe3b]        # 20b0 <_IO_stdin_used+0xb0>
    1275:	48 89 84 24 10 01 00 	mov    QWORD PTR [rsp+0x110],rax
    127c:	00 
    127d:	48 8b 05 34 0e 00 00 	mov    rax,QWORD PTR [rip+0xe34]        # 20b8 <_IO_stdin_used+0xb8>
    1284:	48 89 84 24 18 01 00 	mov    QWORD PTR [rsp+0x118],rax
    128b:	00 
    128c:	48 8b 05 2d 0e 00 00 	mov    rax,QWORD PTR [rip+0xe2d]        # 20c0 <_IO_stdin_used+0xc0>
    1293:	48 89 84 24 20 01 00 	mov    QWORD PTR [rsp+0x120],rax
    129a:	00 
    129b:	48 8b 05 26 0e 00 00 	mov    rax,QWORD PTR [rip+0xe26]        # 20c8 <_IO_stdin_used+0xc8>
    12a2:	48 89 84 24 28 01 00 	mov    QWORD PTR [rsp+0x128],rax
    12a9:	00 
    12aa:	48 8b 05 1f 0e 00 00 	mov    rax,QWORD PTR [rip+0xe1f]        # 20d0 <_IO_stdin_used+0xd0>
    12b1:	48 89 84 24 30 01 00 	mov    QWORD PTR [rsp+0x130],rax
    12b8:	00 
    12b9:	48 8b 05 18 0e 00 00 	mov    rax,QWORD PTR [rip+0xe18]        # 20d8 <_IO_stdin_used+0xd8>
    12c0:	48 89 84 24 38 01 00 	mov    QWORD PTR [rsp+0x138],rax
    12c7:	00 
    12c8:	48 8b 05 11 0e 00 00 	mov    rax,QWORD PTR [rip+0xe11]        # 20e0 <_IO_stdin_used+0xe0>
    12cf:	48 89 84 24 40 01 00 	mov    QWORD PTR [rsp+0x140],rax
    12d6:	00 
    12d7:	48 8b 05 0a 0e 00 00 	mov    rax,QWORD PTR [rip+0xe0a]        # 20e8 <_IO_stdin_used+0xe8>
    12de:	48 89 84 24 48 01 00 	mov    QWORD PTR [rsp+0x148],rax
    12e5:	00 
    12e6:	48 c7 84 24 d0 00 00 	mov    QWORD PTR [rsp+0xd0],0x0
    12ed:	00 00 00 00 00 
    12f2:	48 c7 84 24 d8 00 00 	mov    QWORD PTR [rsp+0xd8],0x0
    12f9:	00 00 00 00 00 
    12fe:	48 c7 84 24 e0 00 00 	mov    QWORD PTR [rsp+0xe0],0x0
    1305:	00 00 00 00 00 
    130a:	48 c7 84 24 e8 00 00 	mov    QWORD PTR [rsp+0xe8],0x0
    1311:	00 00 00 00 00 
    1316:	48 c7 84 24 f0 00 00 	mov    QWORD PTR [rsp+0xf0],0x0
    131d:	00 00 00 00 00 
    1322:	48 c7 84 24 80 00 00 	mov    QWORD PTR [rsp+0x80],0x0
    1329:	00 00 00 00 00 
    132e:	48 c7 84 24 88 00 00 	mov    QWORD PTR [rsp+0x88],0x0
    1335:	00 00 00 00 00 
    133a:	48 c7 84 24 90 00 00 	mov    QWORD PTR [rsp+0x90],0x0
    1341:	00 00 00 00 00 
    1346:	48 c7 84 24 98 00 00 	mov    QWORD PTR [rsp+0x98],0x0
    134d:	00 00 00 00 00 
    1352:	48 c7 84 24 a0 00 00 	mov    QWORD PTR [rsp+0xa0],0x0
    1359:	00 00 00 00 00 
    135e:	48 c7 84 24 a8 00 00 	mov    QWORD PTR [rsp+0xa8],0x0
    1365:	00 00 00 00 00 
    136a:	48 c7 84 24 b0 00 00 	mov    QWORD PTR [rsp+0xb0],0x0
    1371:	00 00 00 00 00 
    1376:	48 c7 84 24 b8 00 00 	mov    QWORD PTR [rsp+0xb8],0x0
    137d:	00 00 00 00 00 
    1382:	48 c7 84 24 c0 00 00 	mov    QWORD PTR [rsp+0xc0],0x0
    1389:	00 00 00 00 00 
    138e:	48 c7 84 24 c8 00 00 	mov    QWORD PTR [rsp+0xc8],0x0
    1395:	00 00 00 00 00 
    139a:	b9 00 00 00 00       	mov    ecx,0x0
    139f:	8b 94 8c 50 01 00 00 	mov    edx,DWORD PTR [rsp+rcx*4+0x150]
    13a6:	8d 42 05             	lea    eax,[rdx+0x5]
    13a9:	8d 72 fc             	lea    esi,[rdx-0x4]
    13ac:	0f af c6             	imul   eax,esi
    13af:	8d 72 f7             	lea    esi,[rdx-0x9]
    13b2:	0f af c6             	imul   eax,esi
    13b5:	83 ea 11             	sub    edx,0x11
    13b8:	0f af c2             	imul   eax,edx
    13bb:	89 84 8c d0 00 00 00 	mov    DWORD PTR [rsp+rcx*4+0xd0],eax
    13c2:	48 83 c1 01          	add    rcx,0x1
    13c6:	48 83 f9 0a          	cmp    rcx,0xa
    13ca:	75 d3                	jne    139f <main+0x1ca>
    13cc:	b8 00 00 00 00       	mov    eax,0x0
    13d1:	f2 44 0f 10 05 16 0d 	movsd  xmm8,QWORD PTR [rip+0xd16]        # 20f0 <_IO_stdin_used+0xf0>
    13d8:	00 00 
    13da:	66 0f ef ff          	pxor   xmm7,xmm7
    13de:	f2 0f 10 35 12 0d 00 	movsd  xmm6,QWORD PTR [rip+0xd12]        # 20f8 <_IO_stdin_used+0xf8>
    13e5:	00 
    13e6:	f2 0f 10 2d 12 0d 00 	movsd  xmm5,QWORD PTR [rip+0xd12]        # 2100 <_IO_stdin_used+0x100>
    13ed:	00 
    13ee:	f2 0f 10 25 12 0d 00 	movsd  xmm4,QWORD PTR [rip+0xd12]        # 2108 <_IO_stdin_used+0x108>
    13f5:	00 
    13f6:	f2 0f 10 1d 12 0d 00 	movsd  xmm3,QWORD PTR [rip+0xd12]        # 2110 <_IO_stdin_used+0x110>
    13fd:	00 
    13fe:	f2 0f 10 84 c4 00 01 	movsd  xmm0,QWORD PTR [rsp+rax*8+0x100]
    1405:	00 00 
    1407:	66 44 0f 28 c8       	movapd xmm9,xmm0
    140c:	f2 44 0f 59 c8       	mulsd  xmm9,xmm0
    1411:	66 0f 28 c8          	movapd xmm1,xmm0
    1415:	f2 41 0f 5c c8       	subsd  xmm1,xmm8
    141a:	f2 0f 58 cf          	addsd  xmm1,xmm7
    141e:	66 0f 28 d0          	movapd xmm2,xmm0
    1422:	f2 0f 58 d6          	addsd  xmm2,xmm6
    1426:	f2 0f 59 d1          	mulsd  xmm2,xmm1
    142a:	66 0f 28 c8          	movapd xmm1,xmm0
    142e:	f2 41 0f 59 c9       	mulsd  xmm1,xmm9
    1433:	f2 41 0f 5e c9       	divsd  xmm1,xmm9
    1438:	f2 0f 5c cd          	subsd  xmm1,xmm5
    143c:	f2 0f 59 ca          	mulsd  xmm1,xmm2
    1440:	f2 0f 5c c4          	subsd  xmm0,xmm4
    1444:	f2 0f 58 c3          	addsd  xmm0,xmm3
    1448:	f2 0f 59 c1          	mulsd  xmm0,xmm1
    144c:	f2 0f 11 84 c4 80 00 	movsd  QWORD PTR [rsp+rax*8+0x80],xmm0
    1453:	00 00 
    1455:	48 83 c0 01          	add    rax,0x1
    1459:	48 83 f8 0a          	cmp    rax,0xa
    145d:	75 9f                	jne    13fe <main+0x229>
    145f:	48 8d 35 a2 0b 00 00 	lea    rsi,[rip+0xba2]        # 2008 <_IO_stdin_used+0x8>
    1466:	48 8b 1d 63 2b 00 00 	mov    rbx,QWORD PTR [rip+0x2b63]        # 3fd0 <std::cout@GLIBCXX_3.4>
    146d:	48 89 df             	mov    rdi,rbx
    1470:	e8 fb fb ff ff       	call   1070 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)@plt>
    1475:	48 89 df             	mov    rdi,rbx
    1478:	e8 c3 fb ff ff       	call   1040 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>
    147d:	48 8d 35 ed 0b 00 00 	lea    rsi,[rip+0xbed]        # 2071 <_IO_stdin_used+0x71>
    1484:	48 89 df             	mov    rdi,rbx
    1487:	e8 e4 fb ff ff       	call   1070 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)@plt>
    148c:	bd 00 00 00 00       	mov    ebp,0x0
    1491:	4c 8b 25 38 2b 00 00 	mov    r12,QWORD PTR [rip+0x2b38]        # 3fd0 <std::cout@GLIBCXX_3.4>
    1498:	eb 3c                	jmp    14d6 <main+0x301>
    149a:	e8 01 fc ff ff       	call   10a0 <std::__throw_bad_cast()@plt>
    149f:	4c 89 ef             	mov    rdi,r13
    14a2:	e8 e9 fb ff ff       	call   1090 <std::ctype<char>::_M_widen_init() const@plt>
    14a7:	49 8b 45 00          	mov    rax,QWORD PTR [r13+0x0]
    14ab:	be 0a 00 00 00       	mov    esi,0xa
    14b0:	4c 89 ef             	mov    rdi,r13
    14b3:	ff 50 30             	call   QWORD PTR [rax+0x30]
    14b6:	89 c6                	mov    esi,eax
    14b8:	40 0f be f6          	movsx  esi,sil
    14bc:	48 89 df             	mov    rdi,rbx
    14bf:	e8 6c fb ff ff       	call   1030 <std::ostream::put(char)@plt>
    14c4:	48 89 c7             	mov    rdi,rax
    14c7:	e8 84 fb ff ff       	call   1050 <std::ostream::flush()@plt>
    14cc:	48 83 c5 01          	add    rbp,0x1
    14d0:	48 83 fd 0a          	cmp    rbp,0xa
    14d4:	74 79                	je     154f <main+0x37a>
    14d6:	ba 02 00 00 00       	mov    edx,0x2
    14db:	48 8d 35 a0 0b 00 00 	lea    rsi,[rip+0xba0]        # 2082 <_IO_stdin_used+0x82>
    14e2:	4c 89 e7             	mov    rdi,r12
    14e5:	e8 96 fb ff ff       	call   1080 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
    14ea:	8b b4 ac 50 01 00 00 	mov    esi,DWORD PTR [rsp+rbp*4+0x150]
    14f1:	4c 89 e7             	mov    rdi,r12
    14f4:	e8 d7 fb ff ff       	call   10d0 <std::ostream::operator<<(int)@plt>
    14f9:	48 89 c3             	mov    rbx,rax
    14fc:	ba 04 00 00 00       	mov    edx,0x4
    1501:	48 8d 35 7d 0b 00 00 	lea    rsi,[rip+0xb7d]        # 2085 <_IO_stdin_used+0x85>
    1508:	48 89 c7             	mov    rdi,rax
    150b:	e8 70 fb ff ff       	call   1080 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
    1510:	8b b4 ac d0 00 00 00 	mov    esi,DWORD PTR [rsp+rbp*4+0xd0]
    1517:	48 89 df             	mov    rdi,rbx
    151a:	e8 b1 fb ff ff       	call   10d0 <std::ostream::operator<<(int)@plt>
    151f:	48 89 c3             	mov    rbx,rax
    1522:	48 8b 00             	mov    rax,QWORD PTR [rax]
    1525:	48 8b 40 e8          	mov    rax,QWORD PTR [rax-0x18]
    1529:	4c 8b ac 03 f0 00 00 	mov    r13,QWORD PTR [rbx+rax*1+0xf0]
    1530:	00 
    1531:	4d 85 ed             	test   r13,r13
    1534:	0f 84 60 ff ff ff    	je     149a <main+0x2c5>
    153a:	41 80 7d 38 00       	cmp    BYTE PTR [r13+0x38],0x0
    153f:	0f 84 5a ff ff ff    	je     149f <main+0x2ca>
    1545:	41 0f b6 75 43       	movzx  esi,BYTE PTR [r13+0x43]
    154a:	e9 69 ff ff ff       	jmp    14b8 <main+0x2e3>
    154f:	48 8b 1d 7a 2a 00 00 	mov    rbx,QWORD PTR [rip+0x2a7a]        # 3fd0 <std::cout@GLIBCXX_3.4>
    1556:	48 89 df             	mov    rdi,rbx
    1559:	e8 e2 fa ff ff       	call   1040 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>
    155e:	48 8d 35 25 0b 00 00 	lea    rsi,[rip+0xb25]        # 208a <_IO_stdin_used+0x8a>
    1565:	48 89 df             	mov    rdi,rbx
    1568:	e8 03 fb ff ff       	call   1070 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)@plt>
    156d:	bd 00 00 00 00       	mov    ebp,0x0
    1572:	4c 8b 25 57 2a 00 00 	mov    r12,QWORD PTR [rip+0x2a57]        # 3fd0 <std::cout@GLIBCXX_3.4>
    1579:	eb 3c                	jmp    15b7 <main+0x3e2>
    157b:	e8 20 fb ff ff       	call   10a0 <std::__throw_bad_cast()@plt>
    1580:	4c 89 ef             	mov    rdi,r13
    1583:	e8 08 fb ff ff       	call   1090 <std::ctype<char>::_M_widen_init() const@plt>
    1588:	49 8b 45 00          	mov    rax,QWORD PTR [r13+0x0]
    158c:	be 0a 00 00 00       	mov    esi,0xa
    1591:	4c 89 ef             	mov    rdi,r13
    1594:	ff 50 30             	call   QWORD PTR [rax+0x30]
    1597:	89 c6                	mov    esi,eax
    1599:	40 0f be f6          	movsx  esi,sil
    159d:	48 89 df             	mov    rdi,rbx
    15a0:	e8 8b fa ff ff       	call   1030 <std::ostream::put(char)@plt>
    15a5:	48 89 c7             	mov    rdi,rax
    15a8:	e8 a3 fa ff ff       	call   1050 <std::ostream::flush()@plt>
    15ad:	48 83 c5 01          	add    rbp,0x1
    15b1:	48 83 fd 0a          	cmp    rbp,0xa
    15b5:	74 7d                	je     1634 <main+0x45f>
    15b7:	ba 02 00 00 00       	mov    edx,0x2
    15bc:	48 8d 35 bf 0a 00 00 	lea    rsi,[rip+0xabf]        # 2082 <_IO_stdin_used+0x82>
    15c3:	4c 89 e7             	mov    rdi,r12
    15c6:	e8 b5 fa ff ff       	call   1080 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
    15cb:	f2 0f 10 84 ec 00 01 	movsd  xmm0,QWORD PTR [rsp+rbp*8+0x100]
    15d2:	00 00 
    15d4:	4c 89 e7             	mov    rdi,r12
    15d7:	e8 e4 fa ff ff       	call   10c0 <std::ostream& std::ostream::_M_insert<double>(double)@plt>
    15dc:	48 89 c3             	mov    rbx,rax
    15df:	ba 04 00 00 00       	mov    edx,0x4
    15e4:	48 8d 35 9a 0a 00 00 	lea    rsi,[rip+0xa9a]        # 2085 <_IO_stdin_used+0x85>
    15eb:	48 89 c7             	mov    rdi,rax
    15ee:	e8 8d fa ff ff       	call   1080 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
    15f3:	f2 0f 10 84 ec 80 00 	movsd  xmm0,QWORD PTR [rsp+rbp*8+0x80]
    15fa:	00 00 
    15fc:	48 89 df             	mov    rdi,rbx
    15ff:	e8 bc fa ff ff       	call   10c0 <std::ostream& std::ostream::_M_insert<double>(double)@plt>
    1604:	48 89 c3             	mov    rbx,rax
    1607:	48 8b 00             	mov    rax,QWORD PTR [rax]
    160a:	48 8b 40 e8          	mov    rax,QWORD PTR [rax-0x18]
    160e:	4c 8b ac 03 f0 00 00 	mov    r13,QWORD PTR [rbx+rax*1+0xf0]
    1615:	00 
    1616:	4d 85 ed             	test   r13,r13
    1619:	0f 84 5c ff ff ff    	je     157b <main+0x3a6>
    161f:	41 80 7d 38 00       	cmp    BYTE PTR [r13+0x38],0x0
    1624:	0f 84 56 ff ff ff    	je     1580 <main+0x3ab>
    162a:	41 0f b6 75 43       	movzx  esi,BYTE PTR [r13+0x43]
    162f:	e9 65 ff ff ff       	jmp    1599 <main+0x3c4>
    1634:	48 8b 3d 95 29 00 00 	mov    rdi,QWORD PTR [rip+0x2995]        # 3fd0 <std::cout@GLIBCXX_3.4>
    163b:	e8 00 fa ff ff       	call   1040 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>
    1640:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
    1647:	00 00 
    1649:	48 c7 44 24 58 00 00 	mov    QWORD PTR [rsp+0x58],0x0
    1650:	00 00 
    1652:	48 c7 44 24 60 00 00 	mov    QWORD PTR [rsp+0x60],0x0
    1659:	00 00 
    165b:	48 c7 44 24 68 00 00 	mov    QWORD PTR [rsp+0x68],0x0
    1662:	00 00 
    1664:	48 c7 44 24 70 00 00 	mov    QWORD PTR [rsp+0x70],0x0
    166b:	00 00 
    166d:	48 c7 04 24 00 00 00 	mov    QWORD PTR [rsp],0x0
    1674:	00 
    1675:	48 c7 44 24 08 00 00 	mov    QWORD PTR [rsp+0x8],0x0
    167c:	00 00 
    167e:	48 c7 44 24 10 00 00 	mov    QWORD PTR [rsp+0x10],0x0
    1685:	00 00 
    1687:	48 c7 44 24 18 00 00 	mov    QWORD PTR [rsp+0x18],0x0
    168e:	00 00 
    1690:	48 c7 44 24 20 00 00 	mov    QWORD PTR [rsp+0x20],0x0
    1697:	00 00 
    1699:	48 c7 44 24 28 00 00 	mov    QWORD PTR [rsp+0x28],0x0
    16a0:	00 00 
    16a2:	48 c7 44 24 30 00 00 	mov    QWORD PTR [rsp+0x30],0x0
    16a9:	00 00 
    16ab:	48 c7 44 24 38 00 00 	mov    QWORD PTR [rsp+0x38],0x0
    16b2:	00 00 
    16b4:	48 c7 44 24 40 00 00 	mov    QWORD PTR [rsp+0x40],0x0
    16bb:	00 00 
    16bd:	48 c7 44 24 48 00 00 	mov    QWORD PTR [rsp+0x48],0x0
    16c4:	00 00 
    16c6:	b9 00 00 00 00       	mov    ecx,0x0
    16cb:	8b 84 8c 50 01 00 00 	mov    eax,DWORD PTR [rsp+rcx*4+0x150]
    16d2:	89 c6                	mov    esi,eax
    16d4:	0f af f0             	imul   esi,eax
    16d7:	89 c7                	mov    edi,eax
    16d9:	0f af fe             	imul   edi,esi
    16dc:	8d 50 e7             	lea    edx,[rax-0x19]
    16df:	0f af d7             	imul   edx,edi
    16e2:	6b f6 6b             	imul   esi,esi,0x6b
    16e5:	01 f2                	add    edx,esi
    16e7:	69 c0 a1 02 00 00    	imul   eax,eax,0x2a1
    16ed:	8d 84 02 0c f4 ff ff 	lea    eax,[rdx+rax*1-0xbf4]
    16f4:	89 44 8c 50          	mov    DWORD PTR [rsp+rcx*4+0x50],eax
    16f8:	48 83 c1 01          	add    rcx,0x1
    16fc:	48 83 f9 0a          	cmp    rcx,0xa
    1700:	75 c9                	jne    16cb <main+0x4f6>
    1702:	b8 00 00 00 00       	mov    eax,0x0
    1707:	f2 0f 10 3d 09 0a 00 	movsd  xmm7,QWORD PTR [rip+0xa09]        # 2118 <_IO_stdin_used+0x118>
    170e:	00 
    170f:	f2 0f 10 35 09 0a 00 	movsd  xmm6,QWORD PTR [rip+0xa09]        # 2120 <_IO_stdin_used+0x120>
    1716:	00 
    1717:	f2 0f 10 2d 09 0a 00 	movsd  xmm5,QWORD PTR [rip+0xa09]        # 2128 <_IO_stdin_used+0x128>
    171e:	00 
    171f:	f2 0f 10 25 09 0a 00 	movsd  xmm4,QWORD PTR [rip+0xa09]        # 2130 <_IO_stdin_used+0x130>
    1726:	00 
    1727:	f2 0f 10 94 c4 00 01 	movsd  xmm2,QWORD PTR [rsp+rax*8+0x100]
    172e:	00 00 
    1730:	66 0f 28 c2          	movapd xmm0,xmm2
    1734:	f2 0f 59 c2          	mulsd  xmm0,xmm2
    1738:	f2 0f 59 c2          	mulsd  xmm0,xmm2
    173c:	f2 0f 59 c2          	mulsd  xmm0,xmm2
    1740:	66 0f 28 da          	movapd xmm3,xmm2
    1744:	f2 0f 59 df          	mulsd  xmm3,xmm7
    1748:	f2 0f 59 da          	mulsd  xmm3,xmm2
    174c:	f2 0f 59 da          	mulsd  xmm3,xmm2
    1750:	66 0f 28 c8          	movapd xmm1,xmm0
    1754:	f2 0f 5c cb          	subsd  xmm1,xmm3
    1758:	66 0f 28 c2          	movapd xmm0,xmm2
    175c:	f2 0f 59 c6          	mulsd  xmm0,xmm6
    1760:	f2 0f 59 c2          	mulsd  xmm0,xmm2
    1764:	f2 0f 58 c1          	addsd  xmm0,xmm1
    1768:	f2 0f 59 d5          	mulsd  xmm2,xmm5
    176c:	f2 0f 58 c2          	addsd  xmm0,xmm2
    1770:	f2 0f 5c c4          	subsd  xmm0,xmm4
    1774:	f2 0f 11 04 c4       	movsd  QWORD PTR [rsp+rax*8],xmm0
    1779:	48 83 c0 01          	add    rax,0x1
    177d:	48 83 f8 0a          	cmp    rax,0xa
    1781:	75 a4                	jne    1727 <main+0x552>
    1783:	48 8d 35 a6 08 00 00 	lea    rsi,[rip+0x8a6]        # 2030 <_IO_stdin_used+0x30>
    178a:	48 8b 1d 3f 28 00 00 	mov    rbx,QWORD PTR [rip+0x283f]        # 3fd0 <std::cout@GLIBCXX_3.4>
    1791:	48 89 df             	mov    rdi,rbx
    1794:	e8 d7 f8 ff ff       	call   1070 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)@plt>
    1799:	48 89 df             	mov    rdi,rbx
    179c:	e8 9f f8 ff ff       	call   1040 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>
    17a1:	48 8d 35 c9 08 00 00 	lea    rsi,[rip+0x8c9]        # 2071 <_IO_stdin_used+0x71>
    17a8:	48 89 df             	mov    rdi,rbx
    17ab:	e8 c0 f8 ff ff       	call   1070 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)@plt>
    17b0:	bd 00 00 00 00       	mov    ebp,0x0
    17b5:	4c 8b 2d 14 28 00 00 	mov    r13,QWORD PTR [rip+0x2814]        # 3fd0 <std::cout@GLIBCXX_3.4>
    17bc:	eb 3c                	jmp    17fa <main+0x625>
    17be:	e8 dd f8 ff ff       	call   10a0 <std::__throw_bad_cast()@plt>
    17c3:	4c 89 e7             	mov    rdi,r12
    17c6:	e8 c5 f8 ff ff       	call   1090 <std::ctype<char>::_M_widen_init() const@plt>
    17cb:	49 8b 04 24          	mov    rax,QWORD PTR [r12]
    17cf:	be 0a 00 00 00       	mov    esi,0xa
    17d4:	4c 89 e7             	mov    rdi,r12
    17d7:	ff 50 30             	call   QWORD PTR [rax+0x30]
    17da:	89 c6                	mov    esi,eax
    17dc:	40 0f be f6          	movsx  esi,sil
    17e0:	48 89 df             	mov    rdi,rbx
    17e3:	e8 48 f8 ff ff       	call   1030 <std::ostream::put(char)@plt>
    17e8:	48 89 c7             	mov    rdi,rax
    17eb:	e8 60 f8 ff ff       	call   1050 <std::ostream::flush()@plt>
    17f0:	48 83 c5 01          	add    rbp,0x1
    17f4:	48 83 fd 0a          	cmp    rbp,0xa
    17f8:	74 78                	je     1872 <main+0x69d>
    17fa:	ba 02 00 00 00       	mov    edx,0x2
    17ff:	48 8d 35 7c 08 00 00 	lea    rsi,[rip+0x87c]        # 2082 <_IO_stdin_used+0x82>
    1806:	4c 89 ef             	mov    rdi,r13
    1809:	e8 72 f8 ff ff       	call   1080 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
    180e:	8b b4 ac 50 01 00 00 	mov    esi,DWORD PTR [rsp+rbp*4+0x150]
    1815:	4c 89 ef             	mov    rdi,r13
    1818:	e8 b3 f8 ff ff       	call   10d0 <std::ostream::operator<<(int)@plt>
    181d:	48 89 c3             	mov    rbx,rax
    1820:	ba 04 00 00 00       	mov    edx,0x4
    1825:	48 8d 35 59 08 00 00 	lea    rsi,[rip+0x859]        # 2085 <_IO_stdin_used+0x85>
    182c:	48 89 c7             	mov    rdi,rax
    182f:	e8 4c f8 ff ff       	call   1080 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
    1834:	8b 74 ac 50          	mov    esi,DWORD PTR [rsp+rbp*4+0x50]
    1838:	48 89 df             	mov    rdi,rbx
    183b:	e8 90 f8 ff ff       	call   10d0 <std::ostream::operator<<(int)@plt>
    1840:	48 89 c3             	mov    rbx,rax
    1843:	48 8b 00             	mov    rax,QWORD PTR [rax]
    1846:	48 8b 40 e8          	mov    rax,QWORD PTR [rax-0x18]
    184a:	4c 8b a4 03 f0 00 00 	mov    r12,QWORD PTR [rbx+rax*1+0xf0]
    1851:	00 
    1852:	4d 85 e4             	test   r12,r12
    1855:	0f 84 63 ff ff ff    	je     17be <main+0x5e9>
    185b:	41 80 7c 24 38 00    	cmp    BYTE PTR [r12+0x38],0x0
    1861:	0f 84 5c ff ff ff    	je     17c3 <main+0x5ee>
    1867:	41 0f b6 74 24 43    	movzx  esi,BYTE PTR [r12+0x43]
    186d:	e9 6a ff ff ff       	jmp    17dc <main+0x607>
    1872:	48 8b 1d 57 27 00 00 	mov    rbx,QWORD PTR [rip+0x2757]        # 3fd0 <std::cout@GLIBCXX_3.4>
    1879:	48 89 df             	mov    rdi,rbx
    187c:	e8 bf f7 ff ff       	call   1040 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>
    1881:	48 8d 35 02 08 00 00 	lea    rsi,[rip+0x802]        # 208a <_IO_stdin_used+0x8a>
    1888:	48 89 df             	mov    rdi,rbx
    188b:	e8 e0 f7 ff ff       	call   1070 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)@plt>
    1890:	bd 00 00 00 00       	mov    ebp,0x0
    1895:	4c 8b 25 34 27 00 00 	mov    r12,QWORD PTR [rip+0x2734]        # 3fd0 <std::cout@GLIBCXX_3.4>
    189c:	eb 3c                	jmp    18da <main+0x705>
    189e:	e8 fd f7 ff ff       	call   10a0 <std::__throw_bad_cast()@plt>
    18a3:	4c 89 ef             	mov    rdi,r13
    18a6:	e8 e5 f7 ff ff       	call   1090 <std::ctype<char>::_M_widen_init() const@plt>
    18ab:	49 8b 45 00          	mov    rax,QWORD PTR [r13+0x0]
    18af:	be 0a 00 00 00       	mov    esi,0xa
    18b4:	4c 89 ef             	mov    rdi,r13
    18b7:	ff 50 30             	call   QWORD PTR [rax+0x30]
    18ba:	89 c6                	mov    esi,eax
    18bc:	40 0f be f6          	movsx  esi,sil
    18c0:	48 89 df             	mov    rdi,rbx
    18c3:	e8 68 f7 ff ff       	call   1030 <std::ostream::put(char)@plt>
    18c8:	48 89 c7             	mov    rdi,rax
    18cb:	e8 80 f7 ff ff       	call   1050 <std::ostream::flush()@plt>
    18d0:	48 83 c5 01          	add    rbp,0x1
    18d4:	48 83 fd 0a          	cmp    rbp,0xa
    18d8:	74 79                	je     1953 <main+0x77e>
    18da:	ba 02 00 00 00       	mov    edx,0x2
    18df:	48 8d 35 9c 07 00 00 	lea    rsi,[rip+0x79c]        # 2082 <_IO_stdin_used+0x82>
    18e6:	4c 89 e7             	mov    rdi,r12
    18e9:	e8 92 f7 ff ff       	call   1080 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
    18ee:	f2 0f 10 84 ec 00 01 	movsd  xmm0,QWORD PTR [rsp+rbp*8+0x100]
    18f5:	00 00 
    18f7:	4c 89 e7             	mov    rdi,r12
    18fa:	e8 c1 f7 ff ff       	call   10c0 <std::ostream& std::ostream::_M_insert<double>(double)@plt>
    18ff:	48 89 c3             	mov    rbx,rax
    1902:	ba 04 00 00 00       	mov    edx,0x4
    1907:	48 8d 35 77 07 00 00 	lea    rsi,[rip+0x777]        # 2085 <_IO_stdin_used+0x85>
    190e:	48 89 c7             	mov    rdi,rax
    1911:	e8 6a f7 ff ff       	call   1080 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
    1916:	f2 0f 10 04 ec       	movsd  xmm0,QWORD PTR [rsp+rbp*8]
    191b:	48 89 df             	mov    rdi,rbx
    191e:	e8 9d f7 ff ff       	call   10c0 <std::ostream& std::ostream::_M_insert<double>(double)@plt>
    1923:	48 89 c3             	mov    rbx,rax
    1926:	48 8b 00             	mov    rax,QWORD PTR [rax]
    1929:	48 8b 40 e8          	mov    rax,QWORD PTR [rax-0x18]
    192d:	4c 8b ac 03 f0 00 00 	mov    r13,QWORD PTR [rbx+rax*1+0xf0]
    1934:	00 
    1935:	4d 85 ed             	test   r13,r13
    1938:	0f 84 60 ff ff ff    	je     189e <main+0x6c9>
    193e:	41 80 7d 38 00       	cmp    BYTE PTR [r13+0x38],0x0
    1943:	0f 84 5a ff ff ff    	je     18a3 <main+0x6ce>
    1949:	41 0f b6 75 43       	movzx  esi,BYTE PTR [r13+0x43]
    194e:	e9 69 ff ff ff       	jmp    18bc <main+0x6e7>
    1953:	b8 00 00 00 00       	mov    eax,0x0
    1958:	48 81 c4 88 01 00 00 	add    rsp,0x188
    195f:	5b                   	pop    rbx
    1960:	5d                   	pop    rbp
    1961:	41 5c                	pop    r12
    1963:	41 5d                	pop    r13
    1965:	c3                   	ret    

0000000000001966 <_GLOBAL__sub_I_main>:
    1966:	48 83 ec 08          	sub    rsp,0x8
    196a:	48 8d 3d 10 27 00 00 	lea    rdi,[rip+0x2710]        # 4081 <std::__ioinit>
    1971:	e8 3a f7 ff ff       	call   10b0 <std::ios_base::Init::Init()@plt>
    1976:	48 8d 15 fb 26 00 00 	lea    rdx,[rip+0x26fb]        # 4078 <__dso_handle>
    197d:	48 8d 35 fd 26 00 00 	lea    rsi,[rip+0x26fd]        # 4081 <std::__ioinit>
    1984:	48 8b 3d 6d 26 00 00 	mov    rdi,QWORD PTR [rip+0x266d]        # 3ff8 <std::ios_base::Init::~Init()@GLIBCXX_3.4>
    198b:	e8 d0 f6 ff ff       	call   1060 <__cxa_atexit@plt>
    1990:	48 83 c4 08          	add    rsp,0x8
    1994:	c3                   	ret    
    1995:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    199c:	00 00 00 
    199f:	90                   	nop

00000000000019a0 <__libc_csu_init>:
    19a0:	41 57                	push   r15
    19a2:	4c 8d 3d 17 24 00 00 	lea    r15,[rip+0x2417]        # 3dc0 <__frame_dummy_init_array_entry>
    19a9:	41 56                	push   r14
    19ab:	49 89 d6             	mov    r14,rdx
    19ae:	41 55                	push   r13
    19b0:	49 89 f5             	mov    r13,rsi
    19b3:	41 54                	push   r12
    19b5:	41 89 fc             	mov    r12d,edi
    19b8:	55                   	push   rbp
    19b9:	48 8d 2d 10 24 00 00 	lea    rbp,[rip+0x2410]        # 3dd0 <__do_global_dtors_aux_fini_array_entry>
    19c0:	53                   	push   rbx
    19c1:	4c 29 fd             	sub    rbp,r15
    19c4:	48 83 ec 08          	sub    rsp,0x8
    19c8:	e8 33 f6 ff ff       	call   1000 <_init>
    19cd:	48 c1 fd 03          	sar    rbp,0x3
    19d1:	74 1b                	je     19ee <__libc_csu_init+0x4e>
    19d3:	31 db                	xor    ebx,ebx
    19d5:	0f 1f 00             	nop    DWORD PTR [rax]
    19d8:	4c 89 f2             	mov    rdx,r14
    19db:	4c 89 ee             	mov    rsi,r13
    19de:	44 89 e7             	mov    edi,r12d
    19e1:	41 ff 14 df          	call   QWORD PTR [r15+rbx*8]
    19e5:	48 83 c3 01          	add    rbx,0x1
    19e9:	48 39 dd             	cmp    rbp,rbx
    19ec:	75 ea                	jne    19d8 <__libc_csu_init+0x38>
    19ee:	48 83 c4 08          	add    rsp,0x8
    19f2:	5b                   	pop    rbx
    19f3:	5d                   	pop    rbp
    19f4:	41 5c                	pop    r12
    19f6:	41 5d                	pop    r13
    19f8:	41 5e                	pop    r14
    19fa:	41 5f                	pop    r15
    19fc:	c3                   	ret    
    19fd:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000001a00 <__libc_csu_fini>:
    1a00:	c3                   	ret    

Disassembly of section .fini:

0000000000001a04 <_fini>:
    1a04:	48 83 ec 08          	sub    rsp,0x8
    1a08:	48 83 c4 08          	add    rsp,0x8
    1a0c:	c3                   	ret    
